# Copyright (C) Dan Fandrich
#
# SPDX-License-Identifier: curl

name: Linux 32-bit

'on':
  push:
    branches:
      - master
      - '*/ci'
    paths-ignore:
      - '**/*.md'
      - '**/CMakeLists.txt'
      - '.circleci/**'
      - 'appveyor.*'
      - 'CMake/**'
      - 'packages/**'
      - 'plan9/**'
      - 'projects/**'
      - 'winbuild/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/CMakeLists.txt'
      - '.circleci/**'
      - 'appveyor.*'
      - 'CMake/**'
      - 'packages/**'
      - 'plan9/**'
      - 'projects/**'
      - 'winbuild/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: {}

env:
  MAKEFLAGS: -j 5

jobs:
  linux-i686:
    name: ${{ matrix.build.name }}
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: Linux i686
            install_packages: gcc-14-i686-linux-gnu libssl-dev:i386 librtmp-dev:i386 libssh2-1-dev:i386 libidn2-0-dev:i386 libc-ares-dev:i386 zlib1g-dev:i386 libpsl-dev:i386 libbrotli-dev:i386 libzstd-dev:i386
            configure: --enable-debug --with-openssl --with-librtmp --with-libssh2 --with-libidn2 --enable-ares --host=i686-linux-gnu CC=i686-linux-gnu-gcc-14 PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig CPPFLAGS=-I/usr/include/i386-linux-gnu LDFLAGS=-L/usr/lib/i386-linux-gnu

    steps:
      - run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo dpkg --add-architecture i386
          sudo apt-get update -y
          sudo apt-get install -y --no-install-suggests --no-install-recommends libtool autoconf automake pkgconf stunnel4 ${{ matrix.build.install_packages }}
          sudo python3 -m pip install --break-system-packages impacket
        name: 'install prereqs'

      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4

      - run: autoreconf -fi
        name: 'autoreconf'

      - run: |
          ./configure --disable-dependency-tracking --enable-unity --enable-test-bundles --enable-warnings --enable-werror \
            ${{ matrix.build.configure }}
        name: 'configure'

      - run: make V=1
        name: 'make'

      - run: ./src/curl -V
        name: 'check curl -V output'

      - run: make V=1 -C tests
        name: 'make tests'

      - run: make V=1 test-ci
        name: 'run tests'
        env:
          TFLAGS: "${{ matrix.build.tflags }}"

      - run: make V=1 examples
        name: 'make examples'
